client.host=${env.HOSTNAME}
client.service.persistence.host=localhost
client.use.ssl=true
server.ssl.key.file.path=
server.ssl.cert.file.path=
server.ssl.cert.authority.file.path=
server.ssl.cert.passphrase=selfCertForACAS
client.service.rapache.fullpath=https://${client.service.rapache.host}:${client.service.rapache.port}/${client.service.rapache.path}/
client.service.rapache.host=${client.host}
client.service.external.structure.url=http://${client.host}:8080/cmpdreg/structureimage/lot/
client.service.external.lotDetails.url=http://${client.host}:8080/cmpdreg/#lot/

client.deployMode=Prod

server.service.persistence.filePath=${env.ACAS_HOME}/${server.datafiles.relative_path}
server.acas.license=${env.ACAS_HOME}/acas.lic

server.database.name=dbname
server.database.username=acas
server.database.password=acas
server.log.path=${env.ACAS_HOME}/../logs

#config for whether project is required
client.include.project=TRUE

# Query tool settings
client.service.result.viewer.displayName=LiveDesign
client.service.result.viewer.configuredViewers=LiveDesign
client.service.result.viewer.defaultViewer=LiveDesign
client.service.result.viewer.liveDesign.baseUrl=https://example-livedesign-server.domain.com/livedesign
client.service.result.viewer.liveDesign.username=SERVICEACCOUNT
client.service.result.viewer.liveDesign.password=SERVICEACCOUNTPASSWORD
client.service.result.viewer.liveDesign.database.name=LDDATABASENAME
client.service.result.viewer.liveDesign.database.username=LDPOSTGRESUSERNAME
client.service.result.viewer.liveDesign.database.password=LDPOSTGRESPASSWORD
client.service.result.viewer.liveDesign.database.hostname=example-livedesign-server.domain.com
client.service.result.viewer.liveDesign.database.port=LDPORTNUM

server.database.host=${client.service.persistence.host}
server.database.port=ACASDBPORT

server.service.external.preferred.batchid.url=http://localhost:8080/cmpdreg/api/v1/getPreferredName

server.security.authstrategy=ldap
server.security.syncLdapAuthRoles=false

# For navigation to external ACAS modules from ACAS homepage
client.moduleMenus.modules.external=[{"displayName": "Compound Registration", "href": "/cmpdreg"},{"displayName": "Compound Registration Bulk Loader", "href": "/CmpdRegBulkLoader"}, {"displayName": "LiveDesign", "href": "https://example-livedesign-server.domain.com/livedesign"}]

client.roles.loginRole=ROLE_ACAS-USERS,ROLE_CMPDREG-USERS,ROLE_CMPDREG-READONLY
client.roles.cmpdreg.chemistRole=ROLE_CMPDREG-USERS
client.roles.cmpdreg.adminRole=ROLE_CMPDREG-ADMINS
client.roles.acas.userRole=ROLE_ACAS-USERS
client.roles.acas.adminRole=ROLE_ACAS-ADMINS

## Cmpd Reg Bulk Loader Options
client.service.cmpdReg.persistence.host=${client.service.persistence.host}

# client.entity.editingRoles/deletingRoles determine which users can edit/delete protocols/expts. Leave config empty if all users can edit/delete
# use 'entityScientist' if want to restrict privileges to user saved in the scientist value
# Example for restricting editing privs to user in entity's scientist value and users with admin role: client.entity.editingRoles=entityScientist,admin
client.entity.editingRoles=entityScientist,projectAdmin,ROLE_ACAS-ADMINS
client.entity.deletingRoles=entityScientist,projectAdmin,ROLE_ACAS-ADMINS


#Rapache conf file configs
server.rapache.conf.serverlimit=3

# User role that allows changing protocol and experiment statuses to "Approved" or "Rejected"
client.entity.approvalRole=ROLE_ACAS-ADMINS

server.systemTest.runOnStart=false
